# name: Build and Release

# on:
#   push:
#     tags:
#       - 'v*'
#   workflow_dispatch:

# jobs:
#   release:
#     runs-on: ${{ matrix.os }}
    
#     strategy:
#       matrix:
#         os: [macos-latest, ubuntu-latest, windows-latest]
        
#     steps:
#       - name: Check out Git repository
#         uses: actions/checkout@v3
        
#       - name: Install Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18
#           cache: 'npm'
          
#       - name: Install dependencies
#         run: npm ci
        
#       - name: Build Electron app
#         run: npm run electron:build
#         env:
#           GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
#       - name: Upload artifacts
#         uses: actions/upload-artifact@v3
#         with:
#           name: ${{ matrix.os }}-artifacts
#           path: |
#             dist_electron/*.dmg
#             dist_electron/*.exe
#             dist_electron/*.deb
#             dist_electron/*.AppImage
#             dist_electron/*.zip
            
#   create-release:
#     needs: release
#     runs-on: ubuntu-latest
#     if: startsWith(github.ref, 'refs/tags/')
    
#     steps:
#       - name: Download artifacts
#         uses: actions/download-artifact@v3
        
#       - name: Create Release
#         uses: softprops/action-gh-release@v1
#         with:
#           files: |
#             *-artifacts/*.dmg
#             *-artifacts/*.exe
#             *-artifacts/*.deb
#             *-artifacts/*.AppImage
#             *-artifacts/*.zip
#           draft: true
#           prerelease: false
#           generate_release_notes: true
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 